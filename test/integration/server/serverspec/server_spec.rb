require 'spec_helper'

describe 'satellite6::server' do
  # Prereqs
  case os[:release].to_i
  when 6
    describe service('ntpd') do
      it { should be_running }
      it { should be_enabled }
    end
  when 7
    installed = `rpm -qi ntp`
    if installed.include?('is not installed')
      describe service('chronyd') do
        it { should be_running }
        it { should be_enabled }
      end
    else
      describe service('ntpd') do
        it { should be_running }
        it { should be_enabled }
      end
    end
  end
  describe selinux do
    it { should be_enforcing }
  end
  describe iptables do
    it { should have_rule('-A OUTPUT -o lo -p tcp -m tcp --dport 9200 -m owner --uid-owner 993 -j ACCEPT') }
    it { should have_rule('-A OUTPUT -o lo -p tcp -m tcp --dport 9200 -m owner --uid-owner 0 -j ACCEPT') }
    it { should have_rule('-A OUTPUT -o lo -p tcp -m tcp --dport 9200 -j DROP') }
  end
  # Non-prereq stuff
  %w( 53 80 443 5647 5671 8080 8140 9090 ).each do |port|
    describe port(port) do
      it { should be_listening.with('tcp') }
    end
    describe iptables do
      it { should have_rule("-A INPUT -p tcp -m state --state NEW -m tcp --dport #{port} -j ACCEPT") }
    end
  end
  %w( 53 67 68 69  ).each do |port|
    describe port(port) do
      it { should be_listening.with('udp') }
    end
    describe iptables do
      it { should have_rule("-A INPUT -p udp -m state --state NEW -m udp --dport #{port} -j ACCEPT") }
    end
  end
  describe file('/etc/rhsm/rhsm.conf') do
    it { should be_file }
    it { should contain 'Red Hat Subscription Manager Configuration File' }
    it { should contain 'Generated by Chef' }
    it { should be_mode 644 }
    it { should be_owned_by 'root' }
    it { should be_grouped_into 'root' }
  end
  describe file('/etc/katello-installer/answers.katello-installer.yaml') do
    it { should be_file }
    it { should contain 'pulp_admin_password' }
    it { should contain 'dns_tsig_keytab' }
    it { should be_mode 600 }
    it { should be_owned_by 'root' }
    it { should be_grouped_into 'root' }
  end
  describe file('/var/log/katello-installer/chef.log') do
    it { should be_file }
    it { should be_owned_by 'root' }
    it { should be_grouped_into 'root' }
  end
  packages = %w(katello pulp-admin-client pulp-rpm-admin-extensions pulp-rpm-handlers)
  packages.each do |package|
    describe package(package) do
      it { should be_installed }
    end
  end
  describe file('/var/log/katello-installer/chef-exec.exit') do
    it { should exist }
    it { should be_file }
    it { should contain '0' }
  end
  katello_services = %w(
    mongod
    qpidd
    qdrouterd
    tomcat
    foreman-proxy
    postgresql
    pulp_celerybeat
    pulp_resource_manager
    pulp_workers
    httpd
    foreman-tasks
    named
    dhcpd
    rhsmcertd
  )
  katello_services.each do |ks|
    describe service(ks) do
      it { should be_running }
      it { should be_enabled }
    end
  end
end
